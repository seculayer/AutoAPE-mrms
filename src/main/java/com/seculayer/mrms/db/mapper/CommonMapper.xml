<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CommonMapper">
    <!-- Select -->
    <select id="selectTestQuery" resultType="map">
        SELECT 1
    </select>
    <select id="selectCVTFunction" resultType="map">
        SELECT *
        FROM VAR_FUNC_INFO
    </select>
    <select id="selectVarFuncList" resultType="map">
        SELECT conv_func_cls, conv_func_tag
        FROM VAR_FUNC_INFO
    </select>
    <select id="selectSttusCd" resultType="map">
        SELECT learn_sttus_cd
        FROM LEARN_HIST
        WHERE learn_hist_no = #{hist_no}
    </select>
    <select id="selectInfrSttusCd" resultType="map">
      SELECT infr_sttus_cd
      FROM INFERENCE_HIST
      WHERE infr_hist_no = #{hist_no}
    </select>
    <select id="selectModelsInfo" resultType="map">
        SELECT
            CAST(LH.learn_hist_no AS CHAR) AS learn_hist_no
             , CAST(LH.param_id AS CHAR) AS param_id
             , CAST(LH.alg_id AS CHAR) AS alg_id
             , CAST(LH.dp_analysis_id AS CHAR) AS dp_analysis_id
             , CAST(LH.project_id AS CHAR) AS project_id
             , DI.data_analysis_json
             , LH.learn_sttus_cd
             , LH.start_time
             , LH.end_time
             , LH.ml_result_json
             , LH.ml_score
             , LH.eps
             , LH.issue_task_idx
             , LH.model_alias
             , LH.model_bookmark
             , LH.select_yn
             , MPI.param_json
             , MAI.alg_json
             , MAI.metadata_json
             , MAI.alg_type
             , MAI.alg_json
             , AI.alg_nm
             , AI.algorithm_code
             , AI.alg_type
             , AI.dist_yn
             , AI.alg_cont
             , AI.alg_ver
             , AI.proc_id
             , AI.proc_dt
             , AI.lib_type
             , AI.user_made_yn
        FROM LEARN_HIST LH
                 INNER JOIN ML_PARAM_INFO MPI ON LH.param_id = MPI.param_id
                 INNER JOIN ALG_ANAL_INFO MAI ON LH.alg_anal_id = MAI.alg_anal_id
                 INNER JOIN ALGORITHM_INFO AI ON MAI.alg_id = AI.alg_id
                 INNER JOIN DP_ANLS_INFO DI ON LH.dp_analysis_id = DI.dp_analysis_id
        WHERE LH.project_id = #{project_id}
        <if test="learn_hist_no_list != null and learn_hist_no_list.length > 0">
        AND learn_hist_no IN
        <foreach collection="learn_hist_no_list" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
        </if>
    </select>
    <select id="selectProjectsInfo" resultType="map">
        SELECT *
        FROM PROJECT_INFO
    </select>
    <select id="selectProjectsStatusCode" resultType="String">
        SELECT status
        FROM PROJECT_INFO
        WHERE project_id=#{project_id}
    </select>
    <select id="selectProjectInfo" parameterType="string" resultType="map">
        SELECT *
        FROM PROJECT_INFO
        WHERE project_id=#{project_id}
    </select>
    <select id="selectWorkflowInfo" resultType="map">
        SELECT *
        FROM PROJECT_INFO
    </select>
    <select id="selectDatasetInfo" parameterType="string" resultType="map">
        SELECT *
        FROM DATASET
        WHERE dataset_id = #{dataset_id}
    </select>
    <select id="selectDASchedule" parameterType="string" resultType="map">
        SELECT *
        FROM DATASET
        WHERE status_cd = #{status}
    </select>
    <select id="selectDataAnlsInfo" resultType="map">
        SELECT *
        FROM DATA_ANLS_INFO
        WHERE dataset_id = #{dataset_id}
    </select>
    <select id="selectDataAnlsInfoWithDataAnalsID" resultType="map">
        SELECT *
        FROM DATA_ANLS_INFO
        WHERE data_analysis_id = #{data_analysis_id}
    </select>

    <select id="selectUUID" resultType="string">
        SELECT UUID_SHORT()
    </select>

    <select id="selectDataAnlsID" resultType="map">
        SELECT *
        FROM DATA_ANLS_INFO
        WHERE data_analysis_id = (
            SELECT data_analysis_id
            FROM PROJECT_INFO
            WHERE project_id = #{project_id}
        )
    </select>

    <select id="selectAlgInfo" resultType="map">
        SELECT *
        FROM ALGORITHM_INFO
        WHERE alg_id = #{alg_id}
    </select>

    <select id="selectDatasetFormat" parameterType="string" resultType="string">
        SELECT dataset_format
        FROM DATASET
        WHERE dataset_id = (
            SELECT dataset_id
            FROM DATA_ANLS_INFO
            WHERE data_analysis_id = #{data_analysis_id}
          )
    </select>

    <select id="selectEvalResult" parameterType="string" resultType="string">
      SELECT eval_result_json
      FROM LEARN_HIST
      WHERE learn_hist_no = #{learnHistNo}
    </select>

    <select id="selectInferenceSchedule" parameterType="string" resultType="map">
      SELECT *
      FROM INFERENCE_HIST
      WHERE infr_sttus_cd = #{inferenceStatus}
    </select>

    <select id="selectLearnHistInfo" parameterType="string" resultType="map">
      SELECT learn_hist_no, param_id, alg_anal_id, alg_id, dp_analysis_id, project_id
      FROM LEARN_HIST
      WHERE learn_hist_no = #{learnHistNo}
    </select>

    <select id="selectInferenceInfo" parameterType="string" resultType="map">
      SELECT infr_hist_no, infr_sttus_cd, IH.xai_create_yn, IH.start_time, IH.end_time, IH.target_field, alg_nm, alg_cont, dataset_id, IH.learn_hist_no, DAI.data_analysis_id, LH.model_alias, IH.infr_accuracy, IH.infr_f1score
      FROM INFERENCE_HIST IH
             INNER JOIN LEARN_HIST LH ON IH.learn_hist_no = LH.learn_hist_no
             INNER JOIN ALGORITHM_INFO AI ON LH.alg_id = AI.alg_id
             INNER JOIN DATA_ANLS_INFO DAI ON IH.data_analysis_id = DAI.data_analysis_id
      WHERE LH.project_id = #{project_id}
    </select>

    <select id="selectXaiInfo" parameterType="string" resultType="map">
      SELECT xai_hist_no, xai_sttus_cd, alg_nm, alg_cont, XH.learn_hist_no
      FROM XAI_HIST XH
             INNER JOIN LEARN_HIST LH ON XH.learn_hist_no = LH.learn_hist_no
             INNER JOIN ALGORITHM_INFO AI ON LH.alg_id = AI.alg_id
      WHERE LH.project_id = #{project_id}
    </select>

    <select id="selectInferenceInfoDataset" parameterType="string" resultType="map">
      SELECT infr_hist_no, infr_sttus_cd, IH.start_time, IH.end_time, IH.target_field, alg_nm, IH.learn_hist_no, LH.model_alias
      FROM INFERENCE_HIST IH
             INNER JOIN LEARN_HIST LH ON IH.learn_hist_no = LH.learn_hist_no
             INNER JOIN ALGORITHM_INFO AI ON LH.alg_id = AI.alg_id
             INNER JOIN DATA_ANLS_INFO DAI ON IH.data_analysis_id = DAI.data_analysis_id
      WHERE dataset_id = #{dataset_id}
    </select>

    <select id="selectRunInference" parameterType="string" resultType="map">
      SELECT infr_hist_no, infr_sttus_cd, IH.start_time, IH.end_time, IH.target_field, DAI.dataset_id
      FROM INFERENCE_HIST IH
             INNER JOIN DATA_ANLS_INFO DAI ON IH.data_analysis_id = DAI.data_analysis_id
      WHERE learn_hist_no = #{learn_hist_no}
    </select>

    <select id="selectInferenceLog" parameterType="string" resultType="string">
      SELECT logs
      FROM INFERENCE_HIST
      WHERE infr_hist_no = #{infr_hist_no}
    </select>

    <select id="selectXAISchedule" parameterType="string" resultType="map">
      SELECT *
      FROM XAI_HIST
      WHERE xai_sttus_cd = #{xaiStatus}
    </select>

    <!-- 삭제 가능성 있음 -->
    <select id="selectInferenceRst" parameterType="string" resultType="map">
      SELECT infr_accuracy, infr_f1score
      FROM INFERENCE_HIST
      WHERE infr_hist_no = #{infrHistNo}
    </select>


    <!-- Update -->
    <update id="updateSttusCd" parameterType="map">
        UPDATE LEARN_HIST
        SET    learn_sttus_cd = #{sttus_cd}, issue_task_idx = #{task_idx}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateInferenceSttusCd" parameterType="map">
      UPDATE INFERENCE_HIST
      SET    infr_sttus_cd = #{sttus_cd}, issue_task_idx = #{task_idx}
      WHERE  infr_hist_no = #{hist_no}
    </update>
    <update id="updateXAISttusCd" parameterType="map">
      UPDATE XAI_HIST
      SET    xai_sttus_cd = #{sttus_cd}
      WHERE  xai_hist_no = #{hist_no}
    </update>
    <update id="updateEps" parameterType="map">
        UPDATE LEARN_HIST
        SET    eps = #{eps}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateLearnResult" parameterType="map">
        UPDATE LEARN_HIST
        SET    ml_result_json = #{result}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateStartTime" parameterType="map">
        UPDATE LEARN_HIST
        SET    start_time = #{curr_time}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateEndTime" parameterType="map">
        UPDATE LEARN_HIST
        SET    end_time = #{curr_time}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateStartInfrTime" parameterType="map">
      UPDATE INFERENCE_HIST
      SET    start_time = #{curr_time}
      WHERE  infr_hist_no = #{hist_no}
    </update>
    <update id="updateEndInfrTime" parameterType="map">
      UPDATE INFERENCE_HIST
      SET    end_time = #{curr_time}
      WHERE  infr_hist_no = #{hist_no}
    </update>
    <update id="updateDAStatus" parameterType="map">
        UPDATE DATASET
        SET    status_cd = #{status_cd}
        WHERE  dataset_id = #{dataset_id}
    </update>
    <update id="updateEvalResult" parameterType="map">
        UPDATE LEARN_HIST
        SET    eval_result_json = #{result}
        WHERE  learn_hist_no = #{hist_no}
    </update>
    <update id="updateInferenceLog" parameterType="map">
        UPDATE INFERENCE_HIST
        SET    logs = #{logs}
        WHERE  infr_hist_no = #{infr_hist_no}
    </update>
    <update id="updateInferenceRst" parameterType="map">
      UPDATE INFERENCE_HIST
      SET    infr_accuracy = #{infr_accuracy}, infr_f1score = #{infr_f1score}
      WHERE  infr_hist_no = #{infr_hist_no}
    </update>
    <update id="updateXAICreateYN" parameterType="map">
      UPDATE INFERENCE_HIST
      SET    xai_create_yn = "Y"
      WHERE  infr_hist_no = #{infr_hist_no}
    </update>

    <!-- Insert -->
    <insert id="insertDataset" parameterType="map">
        INSERT INTO DATASET (dataset_id,
                             dataset_format,
                             n_cols,
                             dataset_size,
                             n_rows,
                             status_cd,
                             format_json)
        VALUES (#{dataset_id},
                #{dataset_format},
                #{n_cols},
                #{dataset_size},
                #{n_rows},
                #{status_cd},
                #{format_json}
                )
    </insert>
    <insert id="insertDataAnlsInfo" parameterType="map">
        <selectKey keyProperty="data_analysis_id" resultType="long"
                   order="BEFORE">
            SELECT UUID_SHORT()
        </selectKey>
        INSERT INTO DATA_ANLS_INFO (data_analysis_id,
                             metadata_json,
                             dist_file_cnt,
                             analysis_file_nm,
                             dataset_id)
        VALUES (#{data_analysis_id},
                #{metadata_json},
                #{dist_file_cnt},
                #{analysis_file_nm},
                #{dataset_id}
                )
    </insert>
    <insert id="insertInferenceInfo" parameterType="map">
      <selectKey keyProperty="infr_hist_no" resultType="long"
                 order="BEFORE">
        SELECT UUID_SHORT()
      </selectKey>
      INSERT INTO INFERENCE_HIST (infr_hist_no,
                    learn_hist_no,
                    infr_sttus_cd,
                    target_field,
                    data_analysis_id)
      VALUES (#{infr_hist_no},
              #{learn_hist_no},
              #{infr_sttus_cd},
              #{target_field},
              #{data_analysis_id}
      )
    </insert>
    <insert id="insertXaiInfo" parameterType="map">
      <selectKey keyProperty="xai_hist_no" resultType="long"
                 order="BEFORE">
        SELECT UUID_SHORT()
      </selectKey>
      INSERT INTO XAI_HIST (xai_hist_no,
                    infr_hist_no,
                    xai_sttus_cd,
                    target_field,
                    data_analysis_id,
                    learn_hist_no)
      VALUES (#{xai_hist_no},
              #{infr_hist_no},
              #{xai_sttus_cd},
              #{target_field},
              #{data_analysis_id},
              #{learn_hist_no}
      )
    </insert>

    <!-- Delete -->
    <delete id="deleteDataset" parameterType="map">
        DELETE FROM DATASET
        WHERE dataset_id = #{dataset_id}
    </delete>
    <delete id="deleteDataAnalysis" parameterType="map">
      DELETE FROM DATA_ANLS_INFO
      WHERE dataset_id = #{dataset_id}
    </delete>
</mapper>
